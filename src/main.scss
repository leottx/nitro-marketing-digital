@use "./variables";

// SMOOTH RESET
*,
*::after,
*::before { 
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 62.5%;
}

h1, h2, h3, h4, h5 {
  font-size: inherit;
}

input {
  outline: none;
}

button {
  cursor: pointer;
}

// LAYOUT
body {
  font-family: sans-serif;
}

.container {
  padding: variables.$p-md;
  max-width: 576px;
  margin: 0 auto;
  @media screen and (min-width: 480px) {
    padding: variables.$p-2xl 2rem;
  }
}

header {
  margin-bottom: variables.$m-xxl;
  @media screen and (min-width: 480px) {
    margin-bottom: variables.$m-2xl;
  }
  a, img {
    display: block;
    max-width: 100%;
    margin: 0 auto;
  }
}

main {
  text-align: center;
  h1 {
    color: variables.$secondary-color;
    font-size: variables.$f-sm;
    font-style: italic;
    margin-bottom: variables.$m-sm;
    @media screen and (min-width: 480px) {
      font-size: variables.$f-md;
      margin-bottom: variables.$m-lg;
    }
  }
}

.search-form {
  margin:0 auto variables.$m-xxl;
  max-width: 480px;
  label {
    border: 3px solid variables.$primary-color;
    border-radius: 200px;
    display: flex;
    justify-content: space-between;
    overflow: hidden;
    
    > * {
      background: transparent;
      border: none;
      
    }
    input {
      padding: .6rem 0 .6rem 1.6rem;
      font-size: variables.$f-sm;
      width: Calc(100% - 3rem);
      &::placeholder {
        color: variables.$grey-color;
        font-style: italic;
      }
    }
    button {
      padding: .4rem 1rem;
      img {
        margin-top: 4px;
      }
    }
  }
}

.wrapper {
  position: relative;
  font-size: variables.$f-sm;
  @media screen and (min-width: 480px) {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
  }
}

.data {
  margin: variables.$m-xl 0;
  @media screen and (min-width: 480px) {
    width: Calc(50% - 4rem);
  }
  > * {
    text-align: center;
  }
  h2 {
    color: variables.$secondary-color;
    font-size: variables.$f-md;
    font-weight: normal;
    margin-bottom: variables.$m-xs;
  }
  p {
    color: variables.$ternary-color;
    font-size: variables.$f-xxs;
    font-style: oblique;
  }
}

.error {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: white;
  color: variables.$error-color;
  p {
    line-height: 1.6;
  }
}